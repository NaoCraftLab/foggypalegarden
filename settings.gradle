pluginManagement {
    includeBuild("buildPluginSrc")

    repositories {
        mavenCentral()
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }
        maven {
            name = 'Forge'
            url = 'https://maven.minecraftforge.net/'
        }
        maven {
            name = 'Architectury Plugin'
            url = 'https://maven.architectury.dev/'
        }
        maven {
            name = 'JitPack'
            url = "https://jitpack.io"
        }
        gradlePluginPortal()
    }

    plugins {
        id 'architectury-plugin' version "${settings.ext.architecturyPluginVersion}"
        id 'dev.architectury.loom' version "${settings.ext.architecturyLoomVersion}" apply false
        id 'com.github.johnrengelman.shadow' version "${settings.ext.commonShadowVersion}" apply false
    }
}

plugins {
    id 'com.naocraftlab.load-properties-settings-plugin'
}

include('core')
project(':core').name = 'core'

def moduleCommand = settings.ext.moduleCommand
include(":command-$moduleCommand")
project(":command-$moduleCommand").name = "command-$moduleCommand"

def commonClothConfigVersion = settings.ext.commonClothConfigVersion
if (!commonClothConfigVersion.isEmpty() && !settings.ext.moduleClothConfig.isEmpty()) {
    def moduleClothConfig = settings.ext.moduleClothConfig
    include(":cloth-config-$moduleClothConfig")
    project(":cloth-config-$moduleClothConfig").name = "cloth-config-$moduleClothConfig"

    def commonModMenuVersion = settings.ext.commonModMenuVersion
    if (!commonModMenuVersion.isEmpty() && !settings.ext.moduleModMenu.isEmpty()) {
        def moduleModMenu = settings.ext.moduleModMenu
        include(":modmenu-$moduleModMenu")
        project(":modmenu-$moduleModMenu").name = "modmenu-$moduleModMenu"
    } else {
        println 'ModMenu module is disabled for this version.'
    }
} else {
    println 'Cloth Config module is disabled for this version.'
}

def moduleMixin = settings.ext.moduleMixin
include(":mixin-$moduleMixin")
project(":mixin-$moduleMixin").name = "mixin-$moduleMixin"

def platforms = settings.ext.architecturyPlatforms.split(',')
if (platforms.contains('fabric')) {
    include('fabric')
    project(':fabric').name = 'fabric'
} else {
    println 'Fabric module is disabled for this version.'
}
if (platforms.contains('forge')) {
    include('forge')
    project(':forge').name = 'forge'
} else {
    println 'Forge module is disabled for this version.'
}
if (platforms.contains('neoforge')) {
    include('neoforge')
    project(':neoforge').name = 'neoforge'
} else {
    println 'NeoForge module is disabled for this version.'
}

rootProject.name = modId
